version: "3"

services:
  app:
    build:
      context: client
    depends_on:
      - couchdb
    restart: always
    container_name: course-selector
    networks:
      - course
    environment:
      DB_URL: 'course:password@couchdb'
    ports: 
      - 3000:3000
  couchdb:
    image: couchdb:2.3
    restart: always
    container_name: couchdb
    networks:
      - course
    volumes:
      - couchdb:/opt/couchdb/data
    environment:
      COUCHDB_USER: 'course'
      COUCHDB_PASSWORD: 'password'
    ports: 
      - 5984:5984
  server:
    build:
      context: server
    depends_on: 
      - couchdb
    restart: always
    container_name: course-selector-scraper
    networks: 
      - course
    environment: 
      DB_URL: 'course:password@couchdb'
    ports:
      - 9000:9000
  tasker:
    image: strm/tasker
    volumes:
       - /var/run/docker.sock:/var/run/docker.sock
    environment:
      configuration: |
        logging:
          level:
              ROOT: WARN
              org.springframework.web: WARN
              sh.strm: DEBUG
        schedule:
          - every: minute
            task: scrape-courses
        tasks:
          docker:
            - name: scrape-courses
              image: pstauffer/curl:latest
              network: client_course # docker-compose prepends with client_ needed to be able to connect to the same network
              script:
                - curl couchdb:5984/_utils/ # This can be used to send notifications to an express server that will actually scrape or not

volumes: 
  couchdb:
networks: 
  course:
